#import "@preview/mitex:0.2.5": *

= Introducción
En la arquitectura clásica de Von Neumann, el procesador (CPU) se divide en una Unidad Aritmética-Lógica (ALU) y una Unidad de Control. La ALU implementa las operaciones aritméticas y lógicas básicas mediante circuitos electrónicos. Por ejemplo, según Belloso (2019), “la unidad aritmético-lógica (ALU) es un circuito digital que calcula operaciones aritméticas (suma, resta, multiplicación, etc.) y operaciones lógicas (SI, Y, O, NO)” entre los argumentos binarios#footnote[https://www.udb.edu.sv/udb_files/recursos_guias/electronica-ingenieria/sistemas-digitales-ii/2019/i/guia-3.pdf#:~:text=Tarea%20previa]. En particular, la ALU realiza operaciones booleanas fundamentales como AND, OR y XOR.

De esta manera, a partir del presente informe se abordará el modelado de operaciones fundamentales de una Unidad Lógico-Aritmética (ALU) utilizando Máquinas de Turing (MT). Con este abordaje, se espera poder desarrollar una comprensión profunda de los principios computacionales inherentes al hardware, además de establecer un enfoque pragmático y práctico entre la teoría abstracta de la computación y la arquitectura de computadoras. La investigación se centra en el desarrollo de una Máquina de Turing para la operación lógica AND. Debido a la complejidad de estados que abarca, las otras compuertas lógicas (XOR y OR) serán de análisis teórico.

== Problema a Modelar
La Unidad Lógico-Aritmética (ALU), como pilar de la Unidad Central de Procesamiento (CPU) en las arquitecturas de computadoras modernas, ejerce un gran labor para el funcionamiento adherido del paradigma de Von Neumann. Su cometido primordial reside en la ejecución de una amplia gama de operaciones, abarcando tanto las aritméticas (como la suma, resta, multiplicación y división) como las lógicas (incluyendo AND, OR, NOT, XOR y comparaciones), todas ellas aplicadas sobre datos representados en formato binario. A pesar de tener una representación gráfica del funcionamiento de una Arquitectura Von Neumann (Figura 1), debido al uso de transistores, no se logra entender el proceso detrás del cálculo de resultados binarios.

#figure(
  image("../../../../src/images/FD/Arquitectura Von Neuman.jpg"),
  caption: [Arquitectura Computacional de Von Neumann. Nota. La imagen ilustra la Arquitectura Computacional de Von Neumann, mostrando la relación entre las diferentes secciones y cómo las unidades aritméticas y de control brindan la lógica de acción del procesador CPU.]
)

La selección de la Máquina de Turing (MT) como herramienta para modelar una ALU no es arbitraria; por el contrario, se basa en la universalidad computacional inherente a este modelo abstracto. La Máquina de Turing es un modelo capaz de simular cualquier algoritmo computable, una propiedad central de la Tesis de Church-Turing#footnote[https://arxiv.org/pdf/1201.1223]. Dado que la ALU, como componente esencial de una CPU, ejecuta operaciones que son, en esencia, algoritmos bien definidos sobre datos binarios#footnote[https://blog.emb.global/arithmetic-logic-unit-alu/], se deduce que la MT es intrínsecamente capaz de modelar dichas operaciones.

De esta manera, la capacidad de modelado permite la validación fundamental de que las operaciones básicas de un hardware complejo pueden reducirse a los principios más elementales de la computabilidad. Ante esta premisa, se espera comprobar que cualquier proceso que pueda ser considerado "efectivamente calculable" es susceptible de ser realizado por una Máquina de Turing, lo que a su vez proporciona una base teórica sólida para el diseño y la comprensión de los sistemas de hardware digital. Así, dada la representación de dos bits de entrada, se escribirá en la cinta su conjunción lógica (AND); la cinta se recorrerá leyendo los símbolos de entrada (bits), y luego se escribirá el resultado (0 o 1) según la tabla de verdad de AND.

== Justificación del Problema
El modelado de una Unidad Lógico-Aritmética (ALU) empleando Máquinas de Turing (MT) provee una fundamentación teórica rigurosa para comprender cómo las operaciones de bajo nivel se materializan a partir de principios computacionales elementales. Esta perspectiva es de vital importancia, ya que conecta la ingeniería de computadoras (diseño físico de la CPU-ALU) y, por otro lado, la teoría de la computación. La Máquina de Turing, a pesar de su concepción simple, representa un modelo de computación que permite definir su eficiencia para abarcar todo aquello que se considera intuitivamente computable dentro del dominio discreto. De esta manera, permite definir las capacidades y las limitaciones intrínsecas de los sistemas computacionales logrando una interrelación con la arquitectura de computadoras.

#figure(
  image("../../../../src/images/FD/Turing Machine.png", width: 25em),
  caption: [Máquina de Turing. Nota. La imagen representa el modelo abstracto de una Máquina de Turing. Elaboración propia.]
)

Como se puede observar en la imagen presentada, la simplicidad de la Máquina de Turing como modelo abstracto contrasta notablemente con la complejidad de una ALU real, pero es precisamente esta abstracción la que posibilita una comprensión fundamental de la computabilidad. Una ALU física es un circuito integrado de alta complejidad, mientras que una Máquina de Turing es un modelo conceptual definido por componentes mínimos: una cinta, un cabezal y un conjunto finito de reglas. A pesar de esta disparidad, la MT puede modelar las operaciones de la ALU. Esta capacidad define cómo la computación no reside en la complejidad física del hardware, sino en la aptitud para ejecutar un conjunto determinista de reglas que manipulan información. Esta simplificación permite aislar y estudiar los principios fundamentales de la computación sin las distracciones que implican los detalles de implementación del hardware. En consecuencia, la presente propuesta permitirá definir los límites y las capacidades de la computación en su nivel más básico.

#pagebreak()